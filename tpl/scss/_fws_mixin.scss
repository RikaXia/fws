@charset "utf-8";

//精灵图宽高设置方法
@mixin sprite-size($sprite,$element){
    $w:spriteW($sprite,$element)+px;
    $h:spriteH($sprite,$element)+px;
    
    width:$w;
    height:$h;
};

//精灵图背景坐标获取方法
@mixin sprite-position($sprite,$element,$offectX:0,$offectY:0){
    
    $x:- spriteX($sprite,$element) + $offectX + px;
    $y:- spriteY($sprite,$element) + $offectY + px;
    
    background-position:$x $y;
};

//精灵图资源
@mixin sprite-url($sprite,$addedPath:'../'){
    $url:mapUrl($sprite,$addedPath);
    background-image:url($url);
};

//自定义字体
@mixin font-face($fontName){
    @font-face {
        font-family: '#{fontName}';
        src: url('../images/#{fontName}.eot');
        src:
            url('../images/#{fontName}.eot?#images-spider') format('embedded-opentype'),
            url('../images/#{fontName}.woff') format('woff'),
            url('../images/#{fontName}.ttf') format('truetype'),
            url('../images/#{fontName}.svg') format('svg');
        font-weight: normal;
        font-style: normal;
    };
};

//透明度兼容
@mixin opacity($val){
    opacity:$val;
    filter:alpha(opacity=#{$val * 100});
};


//inline-block
@mixin inline-block(){
	display:inline-block; _zoom:1; _display:inline; *display:inline;
}

//行高设置
@mixin hl($val){
	height:$val; line-height:$val;
}


//水平翻转&垂直翻转
@mixin flip($mode) {
	@if $mode == x {
		-moz-transform:scaleX(-1);
		-webkit-transform:scaleX(-1);
		-o-transform:scaleX(-1);
		transform:scaleX(-1);
		/*IE*/
		filter:FlipH;
	} @else if $mode == y {
		-moz-transform:scaleY(-1);
		-webkit-transform:scaleY(-1);
		-o-transform:scaleY(-1);
		transform:scaleY(-1);
		/*IE*/
		filter:FlipV;
	}
}

//箭头
@mixin arrow($color:black,$size:4px,$mode:b){
	width:0px; height:0px; font-size:0; overflow:hidden; border-width:$size; vertical-align:middle;
	$style:null;
	@if $mode == t {
		$style:transparent transparent $color transparent; border-style:dashed dashed solid dashed;
	} @else if $mode == r {
		$style:transparent transparent transparent $color; border-style:dashed dashed dashed solid;
	} @else if $mode == b {
		$style:$color transparent transparent; border-style:solid dashed dashed dashed;
	} @else if $mode == l {
		$style:transparent $color transparent transparent; border-style:dashed solid dashed dashed;
	}
	border-color:$style;
}

//css开启gpu加速
@mixin opengpu(){
	-webkit-transform: translate3d(0,0,0);
	-moz-transform: translate3d(0,0,0);
	-ms-transform: translate3d(0,0,0);
	-o-transform: translate3d(0,0,0);
	transform: translate3d(0,0,0);
}

//动画过渡方式(指定元素all为所有，时间，方式)
@mixin transition($value){
	-webkit-transition:$value;
	-moz-transition:$value;
	-ms-transition:$value;
	-o-transition:$value;
	transition:$value;
}

//播放指定动画(动画名称, 单次播放时间s, 播放方式, 延迟时间, 播放次数)
@mixin animation($value){
	-webkit-animation:$value;
	-moz-animation:$value;
	-ms-animation:$value;
	-o-animation:$value;
	animation:$value;
}

//声明一个动画(动画名字)
@mixin keyframes($name){
	@-webkit-keyframes #{$name} {@content;};
	@-moz-keyframes #{$name} {@content;};
	@-ms-keyframes #{$name} {@content;};
	@-o-keyframes #{$name} {@content;};
	@keyframes #{$name} {@content;};
}

//transform变形方式，旋转，偏移…… http://blog.csdn.net/sadfishsc/article/details/7165163
@mixin transform($angle){
	-moz-transform:$angle;
	-webkit-transform:$angle;
	-o-transform:$angle;
	transform:$angle;
}

//旋转(deg)
@mixin rotate($angle){
	-webkit-transform: rotate($angle);
	-o-transform: rotate($angle);
	-moz-transform: rotate($angle);
	transform: rotate($angle);
}

//设置元素的基点位置
@mixin transformorigin($x:50%,$y:50%){
	-webkit-transform-origin:$x $y;
	-o-transform-origin:$x $y;
	-moz-transform-origin:$x $y;
	transform-origin:$x $y;
}

//纵坐标位移(px)
@mixin translateY($y){
	-moz-transform: translateY($y);
	-webkit-transform: translateY($y);
	-o-transform: translateY($y);
	-ms-transform: translateY($y);
	transform: translateY($y); 
}

//渐变
@mixin linear-gradient($color-from, $color-to, $type: vertical) {
	@if $color-from and $color-to {
		$alpha: alpha($color-to);
		@if $alpha < 1 {
			$color-rgb: change_color($color, $alpha: 1);
			background-color: $color-rgb;
		}
		@else {
			background-color: $color-to;
		}

		$ie-from: ie-hex-str($color-from);
		$ie-to: ie-hex-str($color-to);

		$webkit: 'top';
		$spec: 'to bottom';
		$ie: 0;

		@if $type == vertical {
			$webkit: 'top';
			$spec: 'to bottom';
			$ie: 0;
		}
		@if $type == horizontal {
			$webkit: 'left';
			$spec: 'to right';
			$ie: 1;
		}
		@if $type == diagonal1 {
			$webkit: '-45deg';
			$spec: '135deg';
			$ie: 1;
		}
		@if $type == diagonal2 {
			$webkit: '45deg';
			$spec: '45deg';
			$ie: 1;
		}

		background-image: -moz-linear-gradient(#{$webkit}, $color-from 0%,$color-to 100%); /* FF3.6-15 */
		background-image: -webkit-linear-gradient(#{$webkit}, $color-from 0%,$color-to 100%); /* Chrome10-25,Safari5.1-6 */
		background-image: linear-gradient(#{$spec}, $color-from 0%,$color-to 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
		-ms-filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$ie-from}', endColorstr='#{$ie-to}',GradientType=#{$ie} ); /* IE6-9 */
	}
}
